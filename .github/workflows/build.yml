name: Publish container images

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths-ignore: ["**/LICENSE", "**.md", "**.yml", "build-assets/**"]
  schedule:
    - cron: "37 10 * * 6"

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        architecture: [x86-64, arm64]

    steps:
      - uses: actions/checkout@v4

      - name: Build
        uses: cross-platform-actions/action@v0.28.0
        with:
          operating_system: freebsd
          architecture: ${{ matrix.architecture }}
          version: 14.2
          environment_variables: HOSTNM
          run: |
            sudo ./build-assets/setup.sh
            sudo ./build-assets/build.sh "${{ matrix.architecture }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.architecture }}
          retention-days: 1
          path: |
            ./*.${{ matrix.architecture }}.tar
            ./*.${{ matrix.architecture }}.tags

  list:
    runs-on: ubuntu-24.04

    outputs:
      containers: ${{ steps.containers.outputs.containers }}

    steps:
      - uses: actions/checkout@v4

      - name: List containers
        id: containers
        run: |
          cd containers
          echo "containers=$(ls -d * | jq -R -s -c 'split("\n")[:-1]')" >> "${GITHUB_OUTPUT}"

  push:
    runs-on: ubuntu-24.04
    needs: [build, list]
    strategy:
      matrix:
        container: ${{ fromJson(needs.list.outputs.containers) }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Create manifest
        id: manifest
        run: |
          sudo apt-get update
          sudo apt-get install yq
          # Create and tag manifest
          buildah manifest create ${{ matrix.container }}:latest oci-archive:${{ matrix.container }}.x86-64.tar oci-archive:${{ matrix.container }}.arm64.tar
          for tag in $(cat ${{ matrix.container }}.x86-64.tags) $(cat ${{ matrix.container }}.arm64.tags); do
            buildah tag ${{ matrix.container }}:latest "${{ matrix.container }}:${tag}"
          done
          # Output tags (cleaned up)
          echo "tags=latest $(for tag in $(cat ${{ matrix.container }}.x86-64.tags) $(cat ${{ matrix.container }}.arm64.tags); do echo "${tag}"; done | sort | uniq | paste -sd ' ')" > "${GITHUB_OUTPUT}"
          # Annotate manifest with license and description
          buildah manifest annotate --annotation "org.opencontainers.image.licenses=$(yq ".licenses[0]" ${{ matrix.container }}.x86-64.yml)"
          buildah manifest annotate --annotation "org.opencontainers.image.description=$(yq ".comment" ${{ matrix.container }}.x86-64.yml)"

      - name: Registry owner to lowercase
        env:
          GHOWNER: '${{ github.repository_owner }}'
        run: |
          echo "GHOWNER_LC=${GHOWNER,,}" >> "${GITHUB_ENV}"

      - name: Push to GHCR
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ matrix.container }}
          tags: ${{ steps.manifest.outputs.tags }}
          registry: ghcr.io/${{ env.GHOWNER_LC }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
